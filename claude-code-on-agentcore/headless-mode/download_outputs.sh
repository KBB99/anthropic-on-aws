#!/bin/bash

# Download files generated by Claude Code from S3
# Usage: ./download_outputs.sh [session_timestamp]

set -e

INFO_FILE="deployment.json"

# Check if deployment info exists
if [ ! -f "$INFO_FILE" ]; then
    echo "❌ Error: deployment.json not found"
    echo "Please run './deploy.sh' first to deploy the agent."
    exit 1
fi

# Read deployment info
OUTPUT_BUCKET=$(jq -r '.output_bucket' "$INFO_FILE")
REGION=$(jq -r '.region' "$INFO_FILE")

echo "╔════════════════════════════════════════════════════════════════╗"
echo "║            Download Claude Code Output Files                   ║"
echo "╚════════════════════════════════════════════════════════════════╝"
echo ""
echo "📦 Bucket: $OUTPUT_BUCKET"
echo "📍 Region: $REGION"
echo ""

# Create downloads directory
DOWNLOAD_DIR="downloads"
mkdir -p "$DOWNLOAD_DIR"

# If session timestamp provided, download specific session
if [ -n "$1" ]; then
    SESSION_PREFIX="outputs/$1"
    echo "📥 Downloading session: $SESSION_PREFIX"

    aws s3 sync "s3://$OUTPUT_BUCKET/$SESSION_PREFIX" "$DOWNLOAD_DIR/$1" --region "$REGION"

    if [ $? -eq 0 ]; then
        echo "✅ Downloaded to: $DOWNLOAD_DIR/$1"
        ls -lh "$DOWNLOAD_DIR/$1"
    else
        echo "❌ Failed to download files"
        exit 1
    fi
else
    # List available sessions
    echo "📋 Available output sessions:"
    echo ""

    aws s3 ls "s3://$OUTPUT_BUCKET/outputs/" --region "$REGION" | grep PRE | awk '{print $2}' | sed 's/\///' | nl

    echo ""
    echo "💡 To download a specific session:"
    echo "   ./download_outputs.sh YYYYMMDD_HHMMSS"
    echo ""
    echo "💡 To download all sessions:"
    read -p "Download all sessions? (y/N): " -n 1 -r
    echo ""

    if [[ $REPLY =~ ^[Yy]$ ]]; then
        echo "📥 Downloading all sessions..."
        aws s3 sync "s3://$OUTPUT_BUCKET/outputs/" "$DOWNLOAD_DIR" --region "$REGION"

        if [ $? -eq 0 ]; then
            echo "✅ Downloaded all files to: $DOWNLOAD_DIR"
            ls -lh "$DOWNLOAD_DIR"
        else
            echo "❌ Failed to download files"
            exit 1
        fi
    fi
fi

echo ""
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
